{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "f59db5d7224df74019c6448ae485af8a",
    "entities": [
      {
        "tableName": "res_user",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT, `username` TEXT, `email` TEXT, `phone` TEXT, `website` TEXT, `company_name` TEXT, `company_catchPhrase` TEXT, `company_bs` TEXT, `addr_street` TEXT, `addr_suite` TEXT, `addr_city` TEXT, `addr_zipcode` TEXT, `addr_geo_lat` TEXT, `addr_geo_lng` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "phone",
            "columnName": "phone",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "website",
            "columnName": "website",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "company.name",
            "columnName": "company_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "company.catchPhrase",
            "columnName": "company_catchPhrase",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "company.bs",
            "columnName": "company_bs",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address.street",
            "columnName": "addr_street",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address.suite",
            "columnName": "addr_suite",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address.city",
            "columnName": "addr_city",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address.zipcode",
            "columnName": "addr_zipcode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address.geo.lat",
            "columnName": "addr_geo_lat",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address.geo.lng",
            "columnName": "addr_geo_lng",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "album",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `title` TEXT, `user_id` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`user_id`) REFERENCES `res_user`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "createSql": "CREATE  INDEX `user_id` ON `${TABLE_NAME}` (`user_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "res_user",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "posts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `user_id` INTEGER NOT NULL, `title` TEXT, `body` TEXT, PRIMARY KEY(`id`), FOREIGN KEY(`user_id`) REFERENCES `res_user`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "body",
            "columnName": "body",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "user+_index",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "createSql": "CREATE  INDEX `user+_index` ON `${TABLE_NAME}` (`user_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "res_user",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "comments",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `post_id` INTEGER NOT NULL, `name` TEXT, `email` TEXT, `body` TEXT, PRIMARY KEY(`id`), FOREIGN KEY(`post_id`) REFERENCES `posts`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "postId",
            "columnName": "post_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "body",
            "columnName": "body",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "post_index",
            "unique": false,
            "columnNames": [
              "post_id"
            ],
            "createSql": "CREATE  INDEX `post_index` ON `${TABLE_NAME}` (`post_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "posts",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "post_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "photos",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `album_id` INTEGER NOT NULL, `title` TEXT, `url` TEXT, `thumbnail_url` TEXT, PRIMARY KEY(`id`), FOREIGN KEY(`album_id`) REFERENCES `album`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "albumId",
            "columnName": "album_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "thumbnail_url",
            "columnName": "thumbnail_url",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_album",
            "unique": false,
            "columnNames": [
              "album_id"
            ],
            "createSql": "CREATE  INDEX `index_album` ON `${TABLE_NAME}` (`album_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "album",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "album_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"f59db5d7224df74019c6448ae485af8a\")"
    ]
  }
}